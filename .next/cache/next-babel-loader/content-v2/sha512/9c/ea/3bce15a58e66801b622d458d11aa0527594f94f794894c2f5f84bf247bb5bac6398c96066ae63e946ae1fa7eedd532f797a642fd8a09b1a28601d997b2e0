{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abdel/ShaypTest/pages/cryptos/index.js\";\nimport { useQuery } from 'react-query';\nimport Table from '../../components/Table';\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n}\n\nfunction Home() {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery('listCoins', () => fetch('https://api.coinpaprika.com/v1/coins').then(res => res.json()).then(list => list.slice(0, 20)));\n  if (isLoading) return 'Loading...';\n  if (error) return 'An error has occurred: ' + error.message;\n  return /*#__PURE__*/_jsxDEV(Table, {\n    list: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/abdel/ShaypTest/pages/cryptos/index.js"],"names":["useQuery","Table","App","Home","isLoading","error","data","fetch","then","res","json","list","slice","message"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAGA,eAAe,SAASC,GAAT,GAAe;AAC5B,sBACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD;;AACD,SAASC,IAAT,GAAgB;AAEd,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BN,QAAQ,CAAC,WAAD,EAAc,MACvDO,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAW,CAAX,EAAa,EAAb,CAFhB,CADyC,CAA3C;AAKA,MAAIR,SAAJ,EAAe,OAAO,YAAP;AAEf,MAAIC,KAAJ,EAAW,OAAO,4BAA4BA,KAAK,CAACQ,OAAzC;AAGX,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEP;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAGD","sourcesContent":["import { useQuery } from 'react-query'\nimport Table from '../../components/Table';\n\n\nexport default function App() {\n  return (    \n      <Home />\n  )\n}\nfunction Home() {\n\n  const { isLoading, error, data } = useQuery('listCoins', () => \n    fetch('https://api.coinpaprika.com/v1/coins')\n      .then(res => res.json())\n      .then(list => list.slice(0,20))\n  )\n  if (isLoading) return 'Loading...'\n\n  if (error) return 'An error has occurred: ' + error.message\n\n\n  return (\n    <Table list={data}/>\n  )\n}"]},"metadata":{},"sourceType":"module"}