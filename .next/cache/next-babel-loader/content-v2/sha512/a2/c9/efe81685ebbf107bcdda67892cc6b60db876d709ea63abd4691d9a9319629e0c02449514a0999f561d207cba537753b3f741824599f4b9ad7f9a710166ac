{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abdel/ShaypTest/components/Table.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useTable } from \"react-table\";\nimport { useMemo } from \"react\";\nimport Link from \"next/link\";\n\nconst Table = ({\n  list\n}) => {\n  const columns = useMemo(() => [{\n    Header: \"Rank\",\n    accessor: \"rank\"\n  }, {\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Symbol\",\n    accessor: \"symbol\"\n  }, {\n    Header: \"Click\",\n    accessor: \"id\",\n    Cell: ({\n      cell: {\n        row\n      }\n    }) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: `/cryptos/${row.original.id}`,\n        children: \"Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this);\n    }\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: list\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n    style: {\n      border: \"solid 1px blue\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n          style: {\n            borderBottom: \"solid 3px red\",\n            background: \"aliceblue\",\n            color: \"black\",\n            fontWeight: \"bold\"\n          },\n          children: column.render(\"Header\")\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n              style: {\n                padding: \"10px\",\n                border: \"solid 1px gray\",\n                background: \"papayawhip\"\n              },\n              children: cell.render(\"Cell\")\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/abdel/ShaypTest/components/Table.js"],"names":["useTable","useMemo","Link","Table","list","columns","Header","accessor","Cell","cell","row","original","id","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","data","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","getRowProps","cells","getCellProps","padding"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1B,QAAMC,OAAO,GAAGJ,OAAO,CACrB,MAAM,CACJ;AACEK,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADI,EAKJ;AACED,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALI,EASJ;AACED,IAAAA,MAAM,EAAE,QADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GATI,EAaJ;AACED,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE,IAFZ;AAGEC,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,KAAD,KAAuB;AAC3B,0BAAO,QAAC,IAAD;AAAM,QAAA,IAAI,EAAG,YAAWA,GAAG,CAACC,QAAJ,CAAaC,EAAG,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AALH,GAbI,CADe,EAsBrB,EAtBqB,CAAvB;AAyBA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFjB,QAAQ,CAAC;AAAEK,IAAAA,OAAF;AAAWa,IAAAA,IAAI,EAAEd;AAAjB,GAAD,CANZ;AAQA,sBACE,iDAAWS,aAAa,EAAxB;AAA4B,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAAnC;AAAA,4BACE;AAAA,gBACGJ,YAAY,CAACK,GAAb,CAAkBC,WAAD,iBAChB,8CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,8CACMA,MAAM,CAACC,cAAP,EADN;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,YAAY,EAAE,eADT;AAELC,YAAAA,UAAU,EAAE,WAFP;AAGLC,YAAAA,KAAK,EAAE,OAHF;AAILC,YAAAA,UAAU,EAAE;AAJP,WAFT;AAAA,oBASGL,MAAM,CAACM,MAAP,CAAc,QAAd;AATH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,iDAAWhB,iBAAiB,EAA5B;AAAA,gBACGE,IAAI,CAACI,GAAL,CAAUV,GAAD,IAAS;AACjBO,QAAAA,UAAU,CAACP,GAAD,CAAV;AACA,4BACE,8CAAQA,GAAG,CAACqB,WAAJ,EAAR;AAAA,oBACGrB,GAAG,CAACsB,KAAJ,CAAUZ,GAAV,CAAeX,IAAD,IAAU;AACvB,gCACE,8CACMA,IAAI,CAACwB,YAAL,EADN;AAEE,cAAA,KAAK,EAAE;AACLC,gBAAAA,OAAO,EAAE,MADJ;AAELf,gBAAAA,MAAM,EAAE,gBAFH;AAGLQ,gBAAAA,UAAU,EAAE;AAHP,eAFT;AAAA,wBAQGlB,IAAI,CAACqB,MAAL,CAAY,MAAZ;AARH;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAbA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAkBD,OApBA;AADH;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CAhFD;;AAkFA,eAAe3B,KAAf","sourcesContent":["import { useTable } from \"react-table\";\nimport { useMemo } from \"react\";\nimport Link from \"next/link\";\n\nconst Table = ({ list }) => {\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Rank\",\n        accessor: \"rank\",\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Symbol\",\n        accessor: \"symbol\",\n      },\n      {\n        Header: \"Click\",\n        accessor: \"id\",\n        Cell: ({ cell: { row } }) => {\n          return <Link href={`/cryptos/${row.original.id}`}>Link</Link>;\n        },\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data: list });\n\n  return (\n    <table {...getTableProps()} style={{ border: \"solid 1px blue\" }}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th\n                {...column.getHeaderProps()}\n                style={{\n                  borderBottom: \"solid 3px red\",\n                  background: \"aliceblue\",\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                {column.render(\"Header\")}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return (\n                  <td\n                    {...cell.getCellProps()}\n                    style={{\n                      padding: \"10px\",\n                      border: \"solid 1px gray\",\n                      background: \"papayawhip\",\n                    }}\n                  >\n                    {cell.render(\"Cell\")}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}